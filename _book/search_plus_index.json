{"./":{"url":"./","title":"简介","keywords":"","body":"简介 "},"简介/LeetCode.html":{"url":"简介/LeetCode.html","title":"LeetCode","keywords":"","body":"LeetCode "},"简介/数组的遍历.html":{"url":"简介/数组的遍历.html","title":"数组的遍历","keywords":"","body":"数组的遍历 "},"数组/485. 最大连续 1 的个数.html":{"url":"数组/485. 最大连续 1 的个数.html","title":"485. 最大连续 1 的个数","keywords":"","body":"485. 最大连续1的个数 //给定一个二进制数组， 计算其中最大连续1的个数。 //示例 1: //输入: [1,1,0,1,1,1] //输出: 3 //解释: 开头的两位和最后的三位都是连续1，所以最大连续1的个数是 3. // // 注意： // 输入的数组只包含 0 和1。 // 输入数组的长度是正整数，且不超过 10,000。 // // Related Topics 数组 // 👍 165 👎 0 class Solution { public int findMaxConsecutiveOnes(int[] nums) { int count = 0; int maxCount = 0; for(int i=0;imaxCount){ maxCount = count; } count = 0; } } return count>maxCount?count:maxCount; } } 思路：遍历数组，用一个计数器(count)记录1的数量，用另一个计数器记录当前1的最大出行次数，如果遇到0 ，比较count与maxCount ,maxCount 记录较大值，同时将count置为0； "},"数组/495. 提莫攻击.html":{"url":"数组/495. 提莫攻击.html","title":"495. 提莫攻击","keywords":"","body":"495. 提莫攻击 "},"数组/414. 第三大的数.html":{"url":"数组/414. 第三大的数.html","title":"414. 第三大的数","keywords":"","body":"414. 第三大的数 看看插件还有吗 "},"数组/628. 三个数的最大乘积.html":{"url":"数组/628. 三个数的最大乘积.html","title":"628. 三个数的最大乘积","keywords":"","body":"628. 三个数的最大乘积 "},"简介/统计数组中的元素.html":{"url":"简介/统计数组中的元素.html","title":"统计数组中的元素","keywords":"","body":"统计数组中的元素 "},"数组/645. 错误的集合.html":{"url":"数组/645. 错误的集合.html","title":"645. 错误的集合","keywords":"","body":"645. 错误的集合 "}}